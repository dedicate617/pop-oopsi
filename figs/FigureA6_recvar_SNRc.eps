%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.7.0.471 (R2008b). Operating System: Microsoft Windows Vista.
%%Title: E:\MyDocuments\Pub\CUR-Bayesian inference of neural connectivity~\paper\figs\FigureA6_recvar_SNRc.eps
%%CreationDate: 09/01/2009  09:49:43
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   103   245   507   546
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   103   245   507   546
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1236 6552 csm

    0     0  4852  3609 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 4853 3610 rf
6 w
0 2931 3760 0 0 -2931 631 3202 4 MP
PP
-3760 0 0 2931 3760 0 0 -2931 631 3202 5 MP stroke
4 w
DO
0 sg
 631 3202 mt  631  271 L
 631  271 mt  631  271 L
1007 3202 mt 1007  271 L
1007  271 mt 1007  271 L
1383 3202 mt 1383  271 L
1383  271 mt 1383  271 L
1759 3202 mt 1759  271 L
1759  271 mt 1759  271 L
2135 3202 mt 2135  271 L
2135  271 mt 2135  271 L
2511 3202 mt 2511  271 L
2511  271 mt 2511  271 L
2887 3202 mt 2887  271 L
2887  271 mt 2887  271 L
3263 3202 mt 3263  271 L
3263  271 mt 3263  271 L
3639 3202 mt 3639  271 L
3639  271 mt 3639  271 L
4015 3202 mt 4015  271 L
4015  271 mt 4015  271 L
4391 3202 mt 4391  271 L
4391  271 mt 4391  271 L
 631 3202 mt 4391 3202 L
4391 3202 mt 4391 3202 L
 631 2615 mt 4391 2615 L
4391 2615 mt 4391 2615 L
 631 2029 mt 4391 2029 L
4391 2029 mt 4391 2029 L
 631 1443 mt 4391 1443 L
4391 1443 mt 4391 1443 L
 631  857 mt 4391  857 L
4391  857 mt 4391  857 L
 631  271 mt 4391  271 L
4391  271 mt 4391  271 L
SO
6 w
 631  271 mt 4391  271 L
 631 3202 mt 4391 3202 L
4391 3202 mt 4391  271 L
 631 3202 mt  631  271 L
 631 3202 mt 4391 3202 L
 631 3202 mt  631  271 L
 631 3202 mt  631 3164 L
 631  271 mt  631  308 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 168 FMSR

 585 3392 mt 
(2) s
1007 3202 mt 1007 3164 L
1007  271 mt 1007  308 L
 961 3392 mt 
(3) s
1383 3202 mt 1383 3164 L
1383  271 mt 1383  308 L
1337 3392 mt 
(4) s
1759 3202 mt 1759 3164 L
1759  271 mt 1759  308 L
1713 3392 mt 
(5) s
2135 3202 mt 2135 3164 L
2135  271 mt 2135  308 L
2089 3392 mt 
(6) s
2511 3202 mt 2511 3164 L
2511  271 mt 2511  308 L
2465 3392 mt 
(7) s
2887 3202 mt 2887 3164 L
2887  271 mt 2887  308 L
2841 3392 mt 
(8) s
3263 3202 mt 3263 3164 L
3263  271 mt 3263  308 L
3217 3392 mt 
(9) s
3639 3202 mt 3639 3164 L
3639  271 mt 3639  308 L
3546 3392 mt 
(10) s
4015 3202 mt 4015 3164 L
4015  271 mt 4015  308 L
3922 3392 mt 
(11) s
4391 3202 mt 4391 3164 L
4391  271 mt 4391  308 L
4298 3392 mt 
(12) s
 631 3202 mt  668 3202 L
4391 3202 mt 4353 3202 L
 503 3264 mt 
(0) s
 631 2615 mt  668 2615 L
4391 2615 mt 4353 2615 L
 363 2677 mt 
(0.2) s
 631 2029 mt  668 2029 L
4391 2029 mt 4353 2029 L
 363 2091 mt 
(0.4) s
 631 1443 mt  668 1443 L
4391 1443 mt 4353 1443 L
 363 1505 mt 
(0.6) s
 631  857 mt  668  857 L
4391  857 mt 4353  857 L
 363  919 mt 
(0.8) s
 631  271 mt  668  271 L
4391  271 mt 4353  271 L
 503  333 mt 
(1) s
 631  271 mt 4391  271 L
 631 3202 mt 4391 3202 L
4391 3202 mt 4391  271 L
 631 3202 mt  631  271 L
gs 631 271 3761 2932 rc
24 w
640 1 752 -61 714 -309 602 -408 977 -335 706 2577 6 MP stroke
gr

24 w
gs 488 1246 4122 1550 rc
64 W
706 2577 PD
64 W
1683 2242 PD
64 W
2285 1834 PD
64 W
2999 1525 PD
64 W
3751 1464 PD
64 W
4391 1465 PD
gr

gs 631 271 3761 2932 rc
DA
640 3 752 -28 714 -46 602 -184 977 -429 706 2971 6 MP stroke
gr

DA
gs 488 2066 4122 1124 rc
SO
64 W
706 2971 PD
64 W
1683 2542 PD
64 W
2285 2358 PD
64 W
2999 2312 PD
64 W
3751 2284 PD
64 W
4391 2287 PD
DA
gr

gs 631 271 3761 2932 rc
DO
640 -5 752 18 714 8 602 13 977 25 706 3059 6 MP stroke
gr

DO
gs 488 2841 4122 501 rc
SO
64 W
706 3059 PD
64 W
1683 3084 PD
64 W
2285 3097 PD
64 W
2999 3105 PD
64 W
3751 3123 PD
64 W
4391 3118 PD
DO
gr

gs 631 271 3761 2932 rc
SO
0 -2931 1007 3202 2 MP stroke
0 -2931 3263 3202 2 MP stroke
gr

SO
1082 3570 mt 
(Effective signal to noise ratio \(unitless\)) s
 271 1801 mt  -90 rotate
(r) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 132 FMSR

 187 1746 mt  -90 rotate
(2) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 614 3245 mt 
( ) s
4375  313 mt 
( ) s
6 w
1 sg
0 645 898 0 0 -645 691 976 4 MP
PP
-898 0 0 645 898 0 0 -645 691 976 5 MP stroke
4 w
DO
SO
6 w
0 sg
 691  331 mt 1589  331 L
 691  976 mt 1589  976 L
1589  976 mt 1589  331 L
 691  976 mt  691  331 L
 691  976 mt 1589  976 L
 691  976 mt  691  331 L
 691  331 mt 1589  331 L
 691  976 mt 1589  976 L
1589  976 mt 1589  331 L
 691  976 mt  691  331 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 168 FMSR

1149  511 mt 
(66Hz) s
gs 691 331 899 646 rc
24 w
352 0 761 451 2 MP stroke
gr

24 w
gs 719 233 437 437 rc
64 W
937 451 PD
gr

gs 691 331 899 646 rc
gr

1149  714 mt 
(33Hz) s
gs 691 331 899 646 rc
DA
352 0 761 653 2 MP stroke
SO
gs 719 435 437 437 rc
64 W
937 653 PD
gr

gr

1149  917 mt 
(15Hz) s
gs 691 331 899 646 rc
DO
352 0 761 855 2 MP stroke
SO
gr

gs 719 637 437 437 rc
64 W
937 855 PD
gr

gs 691 331 899 646 rc
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
