%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: C:\MyDocuments\Pub\CUR-Bayesian inference of neural connectivity~\pop-oopsi\figs\FigureA6_recvar_SNR.eps
%%CreationDate: 08/04/2009  10:10:55
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    96   238   515   552
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    96   238   515   552
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1152 6624 csm

    0     0  5039  3762 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5040 3763 rf
6 w
0 3066 3905 0 0 -3066 655 3348 4 MP
PP
-3905 0 0 3066 3905 0 0 -3066 655 3348 5 MP stroke
4 w
DO
SO
6 w
0 sg
 655  282 mt 4560  282 L
 655 3348 mt 4560 3348 L
4560 3348 mt 4560  282 L
 655 3348 mt  655  282 L
 655 3348 mt 4560 3348 L
 655 3348 mt  655  282 L
 655 3348 mt  655 3308 L
 655  282 mt  655  321 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 615 3516 mt 
(0) s
1143 3348 mt 1143 3308 L
1143  282 mt 1143  321 L
1063 3516 mt 
(10) s
1631 3348 mt 1631 3308 L
1631  282 mt 1631  321 L
1551 3516 mt 
(20) s
2119 3348 mt 2119 3308 L
2119  282 mt 2119  321 L
2039 3516 mt 
(30) s
2607 3348 mt 2607 3308 L
2607  282 mt 2607  321 L
2527 3516 mt 
(40) s
3095 3348 mt 3095 3308 L
3095  282 mt 3095  321 L
3015 3516 mt 
(50) s
3583 3348 mt 3583 3308 L
3583  282 mt 3583  321 L
3503 3516 mt 
(60) s
4071 3348 mt 4071 3308 L
4071  282 mt 4071  321 L
3991 3516 mt 
(70) s
4560 3348 mt 4560 3308 L
4560  282 mt 4560  321 L
4480 3516 mt 
(80) s
 655 3348 mt  694 3348 L
4560 3348 mt 4520 3348 L
 540 3401 mt 
(0) s
 655 2910 mt  694 2910 L
4560 2910 mt 4520 2910 L
 420 2963 mt 
(0.1) s
 655 2472 mt  694 2472 L
4560 2472 mt 4520 2472 L
 420 2525 mt 
(0.2) s
 655 2034 mt  694 2034 L
4560 2034 mt 4520 2034 L
 420 2087 mt 
(0.3) s
 655 1596 mt  694 1596 L
4560 1596 mt 4520 1596 L
 420 1649 mt 
(0.4) s
 655 1158 mt  694 1158 L
4560 1158 mt 4520 1158 L
 420 1211 mt 
(0.5) s
 655  720 mt  694  720 L
4560  720 mt 4520  720 L
 420  773 mt 
(0.6) s
 655  282 mt  694  282 L
4560  282 mt 4520  282 L
 420  335 mt 
(0.7) s
 655  282 mt 4560  282 L
 655 3348 mt 4560 3348 L
4560 3348 mt 4560  282 L
 655 3348 mt  655  282 L
gs 655 282 3906 3067 rc
24 w
1953 2 976 -91 488 -461 244 -611 196 -500 703 2414 6 MP stroke
gr

24 w
gs 485 533 4294 2100 rc
64 W
703 2414 PD
64 W
899 1914 PD
64 W
1143 1303 PD
64 W
1631 842 PD
64 W
2607 751 PD
64 W
4560 753 PD
gr

gs 655 282 3906 3067 rc
DA
1953 5 976 -43 488 -67 244 -275 196 -642 703 3003 6 MP stroke
gr

DA
gs 485 1758 4294 1464 rc
SO
64 W
703 3003 PD
64 W
899 2361 PD
64 W
1143 2086 PD
64 W
1631 2019 PD
64 W
2607 1976 PD
64 W
4560 1981 PD
DA
gr

gs 655 282 3906 3067 rc
DO
1953 -7 976 26 488 13 244 19 196 38 703 3134 6 MP stroke
gr

DO
gs 485 2916 4294 533 rc
SO
64 W
703 3134 PD
64 W
899 3172 PD
64 W
1143 3191 PD
64 W
1631 3204 PD
64 W
2607 3230 PD
64 W
4560 3223 PD
DO
gr

gs 655 282 3906 3067 rc
gr

1523 3677 mt 
(Photon budget, Kph/neuron/frame) s
 333 2454 mt  -90 rotate
(Recovered variance) s
90 rotate
1411  168 mt 
(Impact of imaging noise on inferrence) s
SO
6 w
1 sg
0 564 841 0 0 -564 739 909 4 MP
PP
-841 0 0 564 841 0 0 -564 739 909 5 MP stroke
4 w
DO
SO
6 w
0 sg
 739  345 mt 1580  345 L
 739  909 mt 1580  909 L
1580  909 mt 1580  345 L
 739  909 mt  739  345 L
 739  909 mt 1580  909 L
 739  909 mt  739  345 L
 739  345 mt 1580  345 L
 739  909 mt 1580  909 L
1580  909 mt 1580  345 L
 739  909 mt  739  345 L
1205  503 mt 
(66Hz) s
gs 739 345 842 565 rc
24 w
358 0 810 452 2 MP stroke
gr

24 w
gs 771 234 437 437 rc
64 W
989 452 PD
gr

gs 739 345 842 565 rc
gr

1205  678 mt 
(33Hz) s
gs 739 345 842 565 rc
DA
358 0 810 627 2 MP stroke
SO
gs 771 409 437 437 rc
64 W
989 627 PD
gr

gr

1205  854 mt 
(15Hz) s
gs 739 345 842 565 rc
DO
358 0 810 801 2 MP stroke
SO
gr

gs 771 583 437 437 rc
64 W
989 801 PD
gr

gs 739 345 842 565 rc
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
