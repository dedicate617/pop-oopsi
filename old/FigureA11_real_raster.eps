%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: C:\MyDocuments\Pub\CUR-Bayesian inference of neural connectivity~\pop-oopsi\figs\FigureA11_real_raster.eps
%%CreationDate: 08/03/2009  09:29:33
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    96   238   515   552
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    96   238   515   552
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1152 6624 csm

    0     0  5039  3762 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5040 3763 rf
6 w
0 -3066 3905 0 0 3066 655 282 4 MP
PP
-3905 0 0 -3066 3905 0 0 3066 655 282 5 MP stroke
gs 655 282 3906 3067 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    000000 040404 080808 0c0c0c 101010 141414 181818 1c1c1c 202020 242424 
    282828 2c2c2c 303030 343434 383838 3c3c3c 404040 444444 484848 4c4c4c 
    505050 555555 595959 5d5d5d 616161 656565 696969 6d6d6d 717171 757575 
    797979 7d7d7d 818181 858585 898989 8d8d8d 919191 959595 999999 9d9d9d 
    a1a1a1 a5a5a5 aaaaaa aeaeae b2b2b2 b6b6b6 bababa bebebe c2c2c2 c6c6c6 
    cacaca cecece d2d2d2 d6d6d6 dadada dedede e2e2e2 e6e6e6 eaeaea eeeeee 
    f2f2f2 f6f6f6 fafafa ffffff 
  >
] setcolorspace } bdef mwscm
gs np 655 282 mt 0 3066 rl 3905 0 rl 0 -3066 rl cp c np
[3905 0 0 3066 655 282] cc
<< % Image dictionary
  /ImageType 1
  /Width 500 /Height 23
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [500.000000 0 0 23.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
%fefo5<f-#(B?Z"5<V425Q(Qd56([J56*p!!1X#m5<f-4!'gA]!^?YgJH2>C"$]!M21Yc(!!"7.!!!i4
!!>Fc!#PS6!]9sBRfEFQr;Zsb!'`[pqZ$U\P5khP56([J!!#7=!!=3*!'gG_"?ukd+Y]Ge!'g;["$Zbc
,Q.TE56(ZeLB%E@!!#6L!!*EkqZ$U$q>^L:JH5NH!C&gJ!!>Fc!'g;[r]g8[%6m&W56(Zb!'^HJ!!#7_
!!!8p!!#7$!!kdh5<f-2!!#7]!!NE(!!5A@rVup/M?!W@rVup_r;ZgBS,`RS5PkE\*;KR85<o&G!'cJD
!'6GH!C&gG!!PRe!'^HJp](@[!'c#7V#UN\5Pb?\5<o,I!^?ZLp](9qJH2AD!C&fh!!#7_!!,;KJH16$
kPtW3#Q4W*5<f,L5Q1Wg56([J!!#4`5PtK_56*q=!!#7\!!#6s!!>Fc!'gD^r]g;\!'g;[r]gA^!'g#S
!'g>\!&49M!"?[D!!<*!!C&I>!!GLd56*qI!!,;KqZ$X[5Q(Q`!WW;u!!"mX!!5AJ)>jIA56(Zt$31,-
!'^Y/!!!Gg!!YXf!'`[J5Q(Qk5<f-4!!#4`56V$O!'gA]r]^hl!'^HJ!!!]5!$M>,5PkE^!WYI]!!!2l
!!#7/!!YXf!&X`V5LTT4!lG!=5<o&G#!W(f56(Zjo)Jb$qu?a^5PkE\5Q1We56)#j4TGQ'!!#67!;c`r
5Q1Wb56([JJH,iR!'^G`*k;7O-9qA-!^?ZLrVus`5Q1W_5Pb?]56*S5!!!(O!.b.-!!#7(!!#6@!!#67
!0$sY5Cig"!!#($!!#7_!!#7!!!!^a!.b-$!/COS5PY9]56([JqZ$U\JH16$d/X/2q>^U^!!#67!.b-4
!!!2r!!#7\!!GLd56*qB!!#7O!!!8"!!!1a!!!B*!!#7[!!#7I!!#7J!!#7<!!#6\!!!i7!!!2=!!!2r
!!"GD!!!9"!!#7>!!5@b2>mLT#Q+Q%%'T^35KNm*5N;_D%/g/+$KM0e!quZr2uj$Z!<,1a!!#7_!!#7_
!!OSI!'1)gXoJG*r;Zg.o`+t=r;ZgBr;Zg^p&G'tp&G(/k5YJ`i;`j8jT#EJ56([Jr;Zg^qu?gO!!#7^
!!,;KhuE`siW'$E!!<*!!!VWf!'fWH!'g#S!#Nl[!!Vro!!<&u!'9oU!'g8Z!'g8Z!'g#S!'gG_!"\f(
!]g<Ekl:],mf3=mkPtTIqZ$U'r;Zg^m/R,-irB-F!'gG_!^?Ydqu?^]rW!'c!!"l@r;cd\!rtOc./a,G
5Q1W_5Q1W_5P+pX56([Ep](:$jo>BGqu?d>!'ffM"V1S7!!!)8!!!Gi!!#7?!!<W0!'gG_!'g#S!$h7=
!^?ZLfDkmQl2Uecqu?]un,NGQr;Zg\oDekDo`+tVq#CCP]DqprJH2qT!uCq;5Q(Q^5CigJ!!"h5!!>Fc
!#b>-!'f9>!!URH!"n#e!'TZK!!;9_!%[U?!'U;]!'g#S!'g;[!'fZI!!iH&!&4<N!'TrS!'f]J!\OI9
p](:)q#CC<qu?^7r;Zg^k5YJ`c2[i/qu?a^5Q(Qc"TSNL!&46L!#5A3!'g,V!!;Ke!&O'D!$V7?!'f9>
#poWU!$_IF!!!)j!!#7T!!3Z25N)SB2>@.O5McA?5Pb?[5PtK_4TI_G!!#7_!!>Fc!!<-"!#bM2!C&gC
!!"hS!!"G(!!!H'!!"mt!!!8/!!"_I!!+]0rW!$b!!#7]!!5@b*8UYq"n2Kl5PG-X(]+143rAsX!rW*!
5PP3[$ih1A!!!B%!!"h7!!!)u!!#1Q!!#7]!!!W,!!"_L!!#1H!!!3"!!"_C!!#7P!!!Q*!!>Fc!!i5u
!!W6"!'g>\!B:/[!!#7X!!4qV5Q(Q_,8p4U"TeZg!!#1V!!*-aoDetL!!#7T!!!2q!!!2r!!!9!!!#7G
!!>Fc!'g)U!'g/W!$U8#!Y58IqZ$[J!!;Wi!!W/u!"A`)!^?ZLnGiPRnc/Xnf`2":hZ*^B!''fT!'g>\
!\478q>^L5r;[!c!'`[J5Q(Q^5PG-X5Nr.L56*qG!!!Gs!!!)K!!33%4o>9c56([J!%&9X0'iQ<"h=U5
!rDrt,PqHB2ul27!!#7W!!#7R!!"^Y!!,;<r;[!)!'^G`#Q4W&4o>9["mu?j"ml9i&,cJ.!r`0"5M?);
!r)`q'`J(6.f_g1!!>"W!^HV`!'foP!$U2!!$(V2!%[O=!'gG_!'gG_!'gA]!C&gJ!!#7_!!!2u!!!2`
!!!2]!!#7T!!#7_!!!B(!!#14!!"YD!!!`/!!#7@!!!2u!!!Q.!!!2r!!#7V!.Y
~>
gr
gr

4 w
DO
SO
6 w
0 sg
 655 3348 mt 4560 3348 L
 655  282 mt 4560  282 L
4560  282 mt 4560 3348 L
 655  282 mt  655 3348 L
 655 3348 mt 4560 3348 L
 655  282 mt  655 3348 L
1432 3348 mt 1432 3308 L
1432  282 mt 1432  321 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

1312 3516 mt 
(100) s
2213 3348 mt 2213 3308 L
2213  282 mt 2213  321 L
2093 3516 mt 
(200) s
2994 3348 mt 2994 3308 L
2994  282 mt 2994  321 L
2874 3516 mt 
(300) s
3775 3348 mt 3775 3308 L
3775  282 mt 3775  321 L
3655 3516 mt 
(400) s
4556 3348 mt 4556 3308 L
4556  282 mt 4556  321 L
4436 3516 mt 
(500) s
 655  481 mt  694  481 L
4560  481 mt 4520  481 L
 540  534 mt 
(2) s
 655  748 mt  694  748 L
4560  748 mt 4520  748 L
 540  801 mt 
(4) s
 655 1015 mt  694 1015 L
4560 1015 mt 4520 1015 L
 540 1068 mt 
(6) s
 655 1281 mt  694 1281 L
4560 1281 mt 4520 1281 L
 540 1334 mt 
(8) s
 655 1548 mt  694 1548 L
4560 1548 mt 4520 1548 L
 460 1601 mt 
(10) s
 655 1815 mt  694 1815 L
4560 1815 mt 4520 1815 L
 460 1868 mt 
(12) s
 655 2081 mt  694 2081 L
4560 2081 mt 4520 2081 L
 460 2134 mt 
(14) s
 655 2348 mt  694 2348 L
4560 2348 mt 4520 2348 L
 460 2401 mt 
(16) s
 655 2614 mt  694 2614 L
4560 2614 mt 4520 2614 L
 460 2667 mt 
(18) s
 655 2881 mt  694 2881 L
4560 2881 mt 4520 2881 L
 460 2934 mt 
(20) s
 655 3148 mt  694 3148 L
4560 3148 mt 4520 3148 L
 460 3201 mt 
(22) s
 655 3348 mt 4560 3348 L
 655  282 mt 4560  282 L
4560  282 mt 4560 3348 L
 655  282 mt  655 3348 L

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
